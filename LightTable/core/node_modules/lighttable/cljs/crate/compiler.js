// Compiled by ClojureScript 0.0-2138
goog.provide('crate.compiler');
goog.require('cljs.core');
goog.require('crate.binding');
goog.require('crate.binding');
goog.require('clojure.string');
goog.require('clojure.string');
goog.require('goog.style');
goog.require('goog.style');
goog.require('goog.dom');
goog.require('goog.dom');
crate.compiler.xmlns = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"xhtml","xhtml",1127939989),"http://www.w3.org/1999/xhtml",new cljs.core.Keyword(null,"svg","svg",1014018518),"http://www.w3.org/2000/svg"], null);
crate.compiler.group_id = cljs.core.atom.call(null,0);
crate.compiler.bindings = cljs.core.atom.call(null,cljs.core.PersistentVector.EMPTY);
crate.compiler.capture_binding = (function capture_binding(tag,b){return cljs.core.swap_BANG_.call(null,crate.compiler.bindings,cljs.core.conj,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag,b], null));
});
crate.compiler.Element = (function (){var obj16256 = {};return obj16256;
})();
crate.compiler._elem = (function _elem(this$){if((function (){var and__3396__auto__ = this$;if(and__3396__auto__)
{return this$.crate$compiler$Element$_elem$arity$1;
} else
{return and__3396__auto__;
}
})())
{return this$.crate$compiler$Element$_elem$arity$1(this$);
} else
{var x__4029__auto__ = (((this$ == null))?null:this$);return (function (){var or__3408__auto__ = (crate.compiler._elem[goog.typeOf(x__4029__auto__)]);if(or__3408__auto__)
{return or__3408__auto__;
} else
{var or__3408__auto____$1 = (crate.compiler._elem["_"]);if(or__3408__auto____$1)
{return or__3408__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"Element.-elem",this$);
}
}
})().call(null,this$);
}
});
crate.compiler.as_content = (function as_content(parent,content){var seq__16263 = cljs.core.seq.call(null,content);var chunk__16264 = null;var count__16265 = 0;var i__16266 = 0;while(true){
if((i__16266 < count__16265))
{var c = cljs.core._nth.call(null,chunk__16264,i__16266);var child_16269 = (((function (){var G__16267 = c;if(G__16267)
{var bit__4052__auto__ = null;if(cljs.core.truth_((function (){var or__3408__auto__ = bit__4052__auto__;if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{return G__16267.crate$compiler$Element$;
}
})()))
{return true;
} else
{if((!G__16267.cljs$lang$protocol_mask$partition$))
{return cljs.core.native_satisfies_QMARK_.call(null,crate.compiler.Element,G__16267);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,crate.compiler.Element,G__16267);
}
})())?crate.compiler._elem.call(null,c):(((c == null))?null:((cljs.core.map_QMARK_.call(null,c))?(function(){throw "Maps cannot be used as content"})():((typeof c === 'string')?goog.dom.createTextNode(c):((cljs.core.vector_QMARK_.call(null,c))?crate.compiler.elem_factory.call(null,c):((cljs.core.seq_QMARK_.call(null,c))?as_content.call(null,parent,c):((crate.binding.binding_coll_QMARK_.call(null,c))?(function (){crate.compiler.capture_binding.call(null,new cljs.core.Keyword(null,"coll","coll",1016963678),c);
return as_content.call(null,parent,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [crate.binding.value.call(null,c)], null));
})():((crate.binding.binding_QMARK_.call(null,c))?(function (){crate.compiler.capture_binding.call(null,new cljs.core.Keyword(null,"text","text",1017460895),c);
return as_content.call(null,parent,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [crate.binding.value.call(null,c)], null));
})():(cljs.core.truth_(c.nodeName)?c:(cljs.core.truth_(c.get)?c.get(0):((new cljs.core.Keyword(null,"else","else",1017020587))?goog.dom.createTextNode([cljs.core.str(c)].join('')):null)))))))))));if(cljs.core.truth_(child_16269))
{goog.dom.appendChild(parent,child_16269);
} else
{}
{
var G__16270 = seq__16263;
var G__16271 = chunk__16264;
var G__16272 = count__16265;
var G__16273 = (i__16266 + 1);
seq__16263 = G__16270;
chunk__16264 = G__16271;
count__16265 = G__16272;
i__16266 = G__16273;
continue;
}
} else
{var temp__4092__auto__ = cljs.core.seq.call(null,seq__16263);if(temp__4092__auto__)
{var seq__16263__$1 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,seq__16263__$1))
{var c__4150__auto__ = cljs.core.chunk_first.call(null,seq__16263__$1);{
var G__16274 = cljs.core.chunk_rest.call(null,seq__16263__$1);
var G__16275 = c__4150__auto__;
var G__16276 = cljs.core.count.call(null,c__4150__auto__);
var G__16277 = 0;
seq__16263 = G__16274;
chunk__16264 = G__16275;
count__16265 = G__16276;
i__16266 = G__16277;
continue;
}
} else
{var c = cljs.core.first.call(null,seq__16263__$1);var child_16278 = (((function (){var G__16268 = c;if(G__16268)
{var bit__4052__auto__ = null;if(cljs.core.truth_((function (){var or__3408__auto__ = bit__4052__auto__;if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{return G__16268.crate$compiler$Element$;
}
})()))
{return true;
} else
{if((!G__16268.cljs$lang$protocol_mask$partition$))
{return cljs.core.native_satisfies_QMARK_.call(null,crate.compiler.Element,G__16268);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,crate.compiler.Element,G__16268);
}
})())?crate.compiler._elem.call(null,c):(((c == null))?null:((cljs.core.map_QMARK_.call(null,c))?(function(){throw "Maps cannot be used as content"})():((typeof c === 'string')?goog.dom.createTextNode(c):((cljs.core.vector_QMARK_.call(null,c))?crate.compiler.elem_factory.call(null,c):((cljs.core.seq_QMARK_.call(null,c))?as_content.call(null,parent,c):((crate.binding.binding_coll_QMARK_.call(null,c))?(function (){crate.compiler.capture_binding.call(null,new cljs.core.Keyword(null,"coll","coll",1016963678),c);
return as_content.call(null,parent,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [crate.binding.value.call(null,c)], null));
})():((crate.binding.binding_QMARK_.call(null,c))?(function (){crate.compiler.capture_binding.call(null,new cljs.core.Keyword(null,"text","text",1017460895),c);
return as_content.call(null,parent,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [crate.binding.value.call(null,c)], null));
})():(cljs.core.truth_(c.nodeName)?c:(cljs.core.truth_(c.get)?c.get(0):((new cljs.core.Keyword(null,"else","else",1017020587))?goog.dom.createTextNode([cljs.core.str(c)].join('')):null)))))))))));if(cljs.core.truth_(child_16278))
{goog.dom.appendChild(parent,child_16278);
} else
{}
{
var G__16279 = cljs.core.next.call(null,seq__16263__$1);
var G__16280 = null;
var G__16281 = 0;
var G__16282 = 0;
seq__16263 = G__16279;
chunk__16264 = G__16280;
count__16265 = G__16281;
i__16266 = G__16282;
continue;
}
}
} else
{return null;
}
}
break;
}
});
crate.compiler.dom_binding = (function (){var method_table__4260__auto__ = cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);var prefer_table__4261__auto__ = cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);var method_cache__4262__auto__ = cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);var cached_hierarchy__4263__auto__ = cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);var hierarchy__4264__auto__ = cljs.core.get.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"hierarchy","hierarchy",3129050535),cljs.core.get_global_hierarchy.call(null));return (new cljs.core.MultiFn("dom-binding",(function (type,_,___$1){return type;
}),new cljs.core.Keyword(null,"default","default",2558708147),hierarchy__4264__auto__,method_table__4260__auto__,prefer_table__4261__auto__,method_cache__4262__auto__,cached_hierarchy__4263__auto__));
})();
cljs.core._add_method.call(null,crate.compiler.dom_binding,new cljs.core.Keyword(null,"text","text",1017460895),(function (_,b,elem){return crate.binding.on_change.call(null,b,(function (v){goog.dom.removeChildren(elem);
return crate.compiler.as_content.call(null,elem,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [v], null));
}));
}));
cljs.core._add_method.call(null,crate.compiler.dom_binding,new cljs.core.Keyword(null,"attr","attr",1016909155),(function (_,p__16283,elem){var vec__16284 = p__16283;var k = cljs.core.nth.call(null,vec__16284,0,null);var b = cljs.core.nth.call(null,vec__16284,1,null);return crate.binding.on_change.call(null,b,(function (v){return crate.compiler.dom_attr.call(null,elem,k,v);
}));
}));
cljs.core._add_method.call(null,crate.compiler.dom_binding,new cljs.core.Keyword(null,"style","style",1123684643),(function (_,p__16285,elem){var vec__16286 = p__16285;var k = cljs.core.nth.call(null,vec__16286,0,null);var b = cljs.core.nth.call(null,vec__16286,1,null);return crate.binding.on_change.call(null,b,(function (v){if(cljs.core.truth_(k))
{return crate.compiler.dom_style.call(null,elem,k,v);
} else
{return crate.compiler.dom_style.call(null,elem,v);
}
}));
}));
crate.compiler.dom_add = (function dom_add(bc,parent,elem,v){var temp__4090__auto__ = crate.binding.opt.call(null,bc,new cljs.core.Keyword(null,"add","add",1014000659));if(cljs.core.truth_(temp__4090__auto__))
{var adder = temp__4090__auto__;return adder.call(null,parent,elem,v);
} else
{return goog.dom.appendChild(parent,elem);
}
});
crate.compiler.dom_remove = (function dom_remove(bc,elem){var temp__4090__auto__ = crate.binding.opt.call(null,bc,new cljs.core.Keyword(null,"remove","remove",4374260726));if(cljs.core.truth_(temp__4090__auto__))
{var remover = temp__4090__auto__;return remover.call(null,elem);
} else
{return goog.dom.removeNode(elem);
}
});
cljs.core._add_method.call(null,crate.compiler.dom_binding,new cljs.core.Keyword(null,"coll","coll",1016963678),(function (_,bc,parent){return crate.binding.on_change.call(null,bc,(function (type,elem,v){var pred__16287 = cljs.core._EQ_;var expr__16288 = type;if(cljs.core.truth_(pred__16287.call(null,new cljs.core.Keyword(null,"add","add",1014000659),expr__16288)))
{return crate.compiler.dom_add.call(null,bc,parent,elem,v);
} else
{if(cljs.core.truth_(pred__16287.call(null,new cljs.core.Keyword(null,"remove","remove",4374260726),expr__16288)))
{return crate.compiler.dom_remove.call(null,bc,elem);
} else
{throw (new Error([cljs.core.str("No matching clause: "),cljs.core.str(expr__16288)].join('')));
}
}
}));
}));
crate.compiler.handle_bindings = (function handle_bindings(bs,elem){var seq__16296 = cljs.core.seq.call(null,bs);var chunk__16297 = null;var count__16298 = 0;var i__16299 = 0;while(true){
if((i__16299 < count__16298))
{var vec__16300 = cljs.core._nth.call(null,chunk__16297,i__16299);var type = cljs.core.nth.call(null,vec__16300,0,null);var b = cljs.core.nth.call(null,vec__16300,1,null);crate.compiler.dom_binding.call(null,type,b,elem);
{
var G__16302 = seq__16296;
var G__16303 = chunk__16297;
var G__16304 = count__16298;
var G__16305 = (i__16299 + 1);
seq__16296 = G__16302;
chunk__16297 = G__16303;
count__16298 = G__16304;
i__16299 = G__16305;
continue;
}
} else
{var temp__4092__auto__ = cljs.core.seq.call(null,seq__16296);if(temp__4092__auto__)
{var seq__16296__$1 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,seq__16296__$1))
{var c__4150__auto__ = cljs.core.chunk_first.call(null,seq__16296__$1);{
var G__16306 = cljs.core.chunk_rest.call(null,seq__16296__$1);
var G__16307 = c__4150__auto__;
var G__16308 = cljs.core.count.call(null,c__4150__auto__);
var G__16309 = 0;
seq__16296 = G__16306;
chunk__16297 = G__16307;
count__16298 = G__16308;
i__16299 = G__16309;
continue;
}
} else
{var vec__16301 = cljs.core.first.call(null,seq__16296__$1);var type = cljs.core.nth.call(null,vec__16301,0,null);var b = cljs.core.nth.call(null,vec__16301,1,null);crate.compiler.dom_binding.call(null,type,b,elem);
{
var G__16310 = cljs.core.next.call(null,seq__16296__$1);
var G__16311 = null;
var G__16312 = 0;
var G__16313 = 0;
seq__16296 = G__16310;
chunk__16297 = G__16311;
count__16298 = G__16312;
i__16299 = G__16313;
continue;
}
}
} else
{return null;
}
}
break;
}
});
crate.compiler.dom_style = (function() {
var dom_style = null;
var dom_style__2 = (function (elem,v){if(typeof v === 'string')
{elem.setAttribute("style",v);
} else
{if(cljs.core.map_QMARK_.call(null,v))
{var seq__16320_16326 = cljs.core.seq.call(null,v);var chunk__16321_16327 = null;var count__16322_16328 = 0;var i__16323_16329 = 0;while(true){
if((i__16323_16329 < count__16322_16328))
{var vec__16324_16330 = cljs.core._nth.call(null,chunk__16321_16327,i__16323_16329);var k_16331 = cljs.core.nth.call(null,vec__16324_16330,0,null);var v_16332__$1 = cljs.core.nth.call(null,vec__16324_16330,1,null);dom_style.call(null,elem,k_16331,v_16332__$1);
{
var G__16333 = seq__16320_16326;
var G__16334 = chunk__16321_16327;
var G__16335 = count__16322_16328;
var G__16336 = (i__16323_16329 + 1);
seq__16320_16326 = G__16333;
chunk__16321_16327 = G__16334;
count__16322_16328 = G__16335;
i__16323_16329 = G__16336;
continue;
}
} else
{var temp__4092__auto___16337 = cljs.core.seq.call(null,seq__16320_16326);if(temp__4092__auto___16337)
{var seq__16320_16338__$1 = temp__4092__auto___16337;if(cljs.core.chunked_seq_QMARK_.call(null,seq__16320_16338__$1))
{var c__4150__auto___16339 = cljs.core.chunk_first.call(null,seq__16320_16338__$1);{
var G__16340 = cljs.core.chunk_rest.call(null,seq__16320_16338__$1);
var G__16341 = c__4150__auto___16339;
var G__16342 = cljs.core.count.call(null,c__4150__auto___16339);
var G__16343 = 0;
seq__16320_16326 = G__16340;
chunk__16321_16327 = G__16341;
count__16322_16328 = G__16342;
i__16323_16329 = G__16343;
continue;
}
} else
{var vec__16325_16344 = cljs.core.first.call(null,seq__16320_16338__$1);var k_16345 = cljs.core.nth.call(null,vec__16325_16344,0,null);var v_16346__$1 = cljs.core.nth.call(null,vec__16325_16344,1,null);dom_style.call(null,elem,k_16345,v_16346__$1);
{
var G__16347 = cljs.core.next.call(null,seq__16320_16338__$1);
var G__16348 = null;
var G__16349 = 0;
var G__16350 = 0;
seq__16320_16326 = G__16347;
chunk__16321_16327 = G__16348;
count__16322_16328 = G__16349;
i__16323_16329 = G__16350;
continue;
}
}
} else
{}
}
break;
}
} else
{if(crate.binding.binding_QMARK_.call(null,v))
{crate.compiler.capture_binding.call(null,new cljs.core.Keyword(null,"style","style",1123684643),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,v], null));
dom_style.call(null,elem,crate.binding.value.call(null,v));
} else
{}
}
}
return elem;
});
var dom_style__3 = (function (elem,k,v){var v__$1 = ((crate.binding.binding_QMARK_.call(null,v))?(function (){crate.compiler.capture_binding.call(null,new cljs.core.Keyword(null,"style","style",1123684643),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null));
return crate.binding.value.call(null,v);
})():v);return goog.style.setStyle(elem,cljs.core.name.call(null,k),v__$1);
});
dom_style = function(elem,k,v){
switch(arguments.length){
case 2:
return dom_style__2.call(this,elem,k);
case 3:
return dom_style__3.call(this,elem,k,v);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dom_style.cljs$core$IFn$_invoke$arity$2 = dom_style__2;
dom_style.cljs$core$IFn$_invoke$arity$3 = dom_style__3;
return dom_style;
})()
;
crate.compiler.dom_attr = (function() {
var dom_attr = null;
var dom_attr__2 = (function (elem,attrs){if(cljs.core.truth_(elem))
{if(!(cljs.core.map_QMARK_.call(null,attrs)))
{return elem.getAttribute(cljs.core.name.call(null,attrs));
} else
{var seq__16357_16363 = cljs.core.seq.call(null,attrs);var chunk__16358_16364 = null;var count__16359_16365 = 0;var i__16360_16366 = 0;while(true){
if((i__16360_16366 < count__16359_16365))
{var vec__16361_16367 = cljs.core._nth.call(null,chunk__16358_16364,i__16360_16366);var k_16368 = cljs.core.nth.call(null,vec__16361_16367,0,null);var v_16369 = cljs.core.nth.call(null,vec__16361_16367,1,null);dom_attr.call(null,elem,k_16368,v_16369);
{
var G__16370 = seq__16357_16363;
var G__16371 = chunk__16358_16364;
var G__16372 = count__16359_16365;
var G__16373 = (i__16360_16366 + 1);
seq__16357_16363 = G__16370;
chunk__16358_16364 = G__16371;
count__16359_16365 = G__16372;
i__16360_16366 = G__16373;
continue;
}
} else
{var temp__4092__auto___16374 = cljs.core.seq.call(null,seq__16357_16363);if(temp__4092__auto___16374)
{var seq__16357_16375__$1 = temp__4092__auto___16374;if(cljs.core.chunked_seq_QMARK_.call(null,seq__16357_16375__$1))
{var c__4150__auto___16376 = cljs.core.chunk_first.call(null,seq__16357_16375__$1);{
var G__16377 = cljs.core.chunk_rest.call(null,seq__16357_16375__$1);
var G__16378 = c__4150__auto___16376;
var G__16379 = cljs.core.count.call(null,c__4150__auto___16376);
var G__16380 = 0;
seq__16357_16363 = G__16377;
chunk__16358_16364 = G__16378;
count__16359_16365 = G__16379;
i__16360_16366 = G__16380;
continue;
}
} else
{var vec__16362_16381 = cljs.core.first.call(null,seq__16357_16375__$1);var k_16382 = cljs.core.nth.call(null,vec__16362_16381,0,null);var v_16383 = cljs.core.nth.call(null,vec__16362_16381,1,null);dom_attr.call(null,elem,k_16382,v_16383);
{
var G__16384 = cljs.core.next.call(null,seq__16357_16375__$1);
var G__16385 = null;
var G__16386 = 0;
var G__16387 = 0;
seq__16357_16363 = G__16384;
chunk__16358_16364 = G__16385;
count__16359_16365 = G__16386;
i__16360_16366 = G__16387;
continue;
}
}
} else
{}
}
break;
}
return elem;
}
} else
{return null;
}
});
var dom_attr__3 = (function (elem,k,v){if(cljs.core._EQ_.call(null,k,new cljs.core.Keyword(null,"style","style",1123684643)))
{crate.compiler.dom_style.call(null,elem,v);
} else
{var v_16388__$1 = ((crate.binding.binding_QMARK_.call(null,v))?(function (){crate.compiler.capture_binding.call(null,new cljs.core.Keyword(null,"attr","attr",1016909155),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null));
return crate.binding.value.call(null,v);
})():v);elem.setAttribute(cljs.core.name.call(null,k),v_16388__$1);
}
return elem;
});
dom_attr = function(elem,k,v){
switch(arguments.length){
case 2:
return dom_attr__2.call(this,elem,k);
case 3:
return dom_attr__3.call(this,elem,k,v);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dom_attr.cljs$core$IFn$_invoke$arity$2 = dom_attr__2;
dom_attr.cljs$core$IFn$_invoke$arity$3 = dom_attr__3;
return dom_attr;
})()
;
/**
* Regular expression that parses a CSS-style id and class from a tag name.
*/
crate.compiler.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
crate.compiler.normalize_map_attrs = (function normalize_map_attrs(map_attrs){return cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.call(null,(function (p__16391){var vec__16392 = p__16391;var n = cljs.core.nth.call(null,vec__16392,0,null);var v = cljs.core.nth.call(null,vec__16392,1,null);if(v === true)
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n,cljs.core.name.call(null,n)], null);
} else
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n,v], null);
}
}),cljs.core.filter.call(null,cljs.core.comp.call(null,cljs.core.boolean$,cljs.core.second),map_attrs)));
});
/**
* Ensure a tag vector is of the form [tag-name attrs content].
*/
crate.compiler.normalize_element = (function normalize_element(p__16394){var vec__16399 = p__16394;var tag = cljs.core.nth.call(null,vec__16399,0,null);var content = cljs.core.nthnext.call(null,vec__16399,1);if(!(((tag instanceof cljs.core.Keyword)) || ((tag instanceof cljs.core.Symbol)) || (typeof tag === 'string')))
{throw [cljs.core.str(tag),cljs.core.str(" is not a valid tag name.")].join('');
} else
{}
var vec__16400 = cljs.core.re_matches.call(null,crate.compiler.re_tag,cljs.core.name.call(null,tag));var _ = cljs.core.nth.call(null,vec__16400,0,null);var tag__$1 = cljs.core.nth.call(null,vec__16400,1,null);var id = cljs.core.nth.call(null,vec__16400,2,null);var class$ = cljs.core.nth.call(null,vec__16400,3,null);var vec__16401 = (function (){var vec__16402 = clojure.string.split.call(null,tag__$1,/:/);var nsp = cljs.core.nth.call(null,vec__16402,0,null);var t = cljs.core.nth.call(null,vec__16402,1,null);var ns_xmlns = crate.compiler.xmlns.call(null,cljs.core.keyword.call(null,nsp));if(cljs.core.truth_(t))
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__3408__auto__ = ns_xmlns;if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{return nsp;
}
})(),t], null);
} else
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"xhtml","xhtml",1127939989).cljs$core$IFn$_invoke$arity$1(crate.compiler.xmlns),nsp], null);
}
})();var nsp = cljs.core.nth.call(null,vec__16401,0,null);var tag__$2 = cljs.core.nth.call(null,vec__16401,1,null);var tag_attrs = cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.call(null,((function (vec__16400,_,tag__$1,id,class$,vec__16401,nsp,tag__$2){
return (function (p1__16393_SHARP_){return !((cljs.core.second.call(null,p1__16393_SHARP_) == null));
});})(vec__16400,_,tag__$1,id,class$,vec__16401,nsp,tag__$2))
,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),(function (){var or__3408__auto__ = id;if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{return null;
}
})(),new cljs.core.Keyword(null,"class","class",1108647146),(cljs.core.truth_(class$)?clojure.string.replace.call(null,class$,/\./," "):null)], null)));var map_attrs = cljs.core.first.call(null,content);if(cljs.core.map_QMARK_.call(null,map_attrs))
{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [nsp,tag__$2,cljs.core.merge.call(null,tag_attrs,crate.compiler.normalize_map_attrs.call(null,map_attrs)),cljs.core.next.call(null,content)], null);
} else
{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [nsp,tag__$2,tag_attrs,content], null);
}
});
crate.compiler.parse_content = (function parse_content(elem,content){var attrs = cljs.core.first.call(null,content);if(cljs.core.map_QMARK_.call(null,attrs))
{crate.compiler.dom_attr.call(null,elem,attrs);
return cljs.core.rest.call(null,content);
} else
{return content;
}
});
crate.compiler.create_elem = (cljs.core.truth_(document.createElementNS)?(function (nsp,tag){return document.createElementNS(nsp,tag);
}):(function (_,tag){return document.createElement(tag);
}));
crate.compiler.elem_factory = (function elem_factory(tag_def){var bindings16405 = crate.compiler.bindings;try{crate.compiler.bindings = cljs.core.atom.call(null,cljs.core.PersistentVector.EMPTY);
var vec__16406 = crate.compiler.normalize_element.call(null,tag_def);var nsp = cljs.core.nth.call(null,vec__16406,0,null);var tag = cljs.core.nth.call(null,vec__16406,1,null);var attrs = cljs.core.nth.call(null,vec__16406,2,null);var content = cljs.core.nth.call(null,vec__16406,3,null);var elem = crate.compiler.create_elem.call(null,nsp,tag);crate.compiler.dom_attr.call(null,elem,attrs);
crate.compiler.as_content.call(null,elem,content);
crate.compiler.handle_bindings.call(null,cljs.core.deref.call(null,crate.compiler.bindings),elem);
return elem;
}finally {crate.compiler.bindings = bindings16405;
}});
/**
* Add an optional attribute argument to a function that returns a vector tag.
*/
crate.compiler.add_optional_attrs = (function add_optional_attrs(func){return (function() { 
var G__16409__delegate = function (args){if(cljs.core.map_QMARK_.call(null,cljs.core.first.call(null,args)))
{var vec__16408 = cljs.core.apply.call(null,func,cljs.core.rest.call(null,args));var tag = cljs.core.nth.call(null,vec__16408,0,null);var body = cljs.core.nthnext.call(null,vec__16408,1);if(cljs.core.map_QMARK_.call(null,cljs.core.first.call(null,body)))
{return cljs.core.apply.call(null,cljs.core.vector,tag,cljs.core.merge.call(null,cljs.core.first.call(null,body),cljs.core.first.call(null,args)),cljs.core.rest.call(null,body));
} else
{return cljs.core.apply.call(null,cljs.core.vector,tag,cljs.core.first.call(null,args),body);
}
} else
{return cljs.core.apply.call(null,func,args);
}
};
var G__16409 = function (var_args){
var args = null;if (arguments.length > 0) {
  args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return G__16409__delegate.call(this,args);};
G__16409.cljs$lang$maxFixedArity = 0;
G__16409.cljs$lang$applyTo = (function (arglist__16410){
var args = cljs.core.seq(arglist__16410);
return G__16409__delegate(args);
});
G__16409.cljs$core$IFn$_invoke$arity$variadic = G__16409__delegate;
return G__16409;
})()
;
});
