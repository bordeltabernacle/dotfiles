// Compiled by ClojureScript 0.0-2138
goog.provide('lt.util.dom');
goog.require('cljs.core');
lt.util.dom.lazy_nl_via_item = (function() {
var lazy_nl_via_item = null;
var lazy_nl_via_item__1 = (function (nl){return lazy_nl_via_item.call(null,nl,0);
});
var lazy_nl_via_item__2 = (function (nl,n){if((n < nl.length))
{return (new cljs.core.LazySeq(null,(function (){return cljs.core.cons.call(null,nl.item(n),lazy_nl_via_item.call(null,nl,(n + 1)));
}),null,null));
} else
{return null;
}
});
lazy_nl_via_item = function(nl,n){
switch(arguments.length){
case 1:
return lazy_nl_via_item__1.call(this,nl);
case 2:
return lazy_nl_via_item__2.call(this,nl,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_item__1;
lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_item__2;
return lazy_nl_via_item;
})()
;
HTMLCollection.prototype.cljs$core$IIndexed$ = true;
HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (this$,n){var this$__$1 = this;return this$__$1.item(n);
});
HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (this$,n,not_found){var this$__$1 = this;var or__3408__auto__ = this$__$1.item(n);if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{return not_found;
}
});
HTMLCollection.prototype.cljs$core$ICounted$ = true;
HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = (function (this$){var this$__$1 = this;return this$__$1.length;
});
HTMLCollection.prototype.cljs$core$ISeqable$ = true;
HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){var this$__$1 = this;return lt.util.dom.lazy_nl_via_item.call(null,this$__$1);
});
NodeList.prototype.cljs$core$IIndexed$ = true;
NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (this$,n){var this$__$1 = this;return this$__$1.item(n);
});
NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (this$,n,not_found){var this$__$1 = this;var or__3408__auto__ = this$__$1.item(n);if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{return not_found;
}
});
NodeList.prototype.cljs$core$ICounted$ = true;
NodeList.prototype.cljs$core$ICounted$_count$arity$1 = (function (this$){var this$__$1 = this;return this$__$1.length;
});
NodeList.prototype.cljs$core$ISeqable$ = true;
NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){var this$__$1 = this;return lt.util.dom.lazy_nl_via_item.call(null,this$__$1);
});
lt.util.dom.text_node = (function text_node(text){return document.createTextNode(text);
});
lt.util.dom.$$ = (function() {
var $$ = null;
var $$__1 = (function (query){return $$.call(null,query,document);
});
var $$__2 = (function (query,elem){return elem.querySelectorAll(cljs.core.name.call(null,query));
});
$$ = function(query,elem){
switch(arguments.length){
case 1:
return $$__1.call(this,query);
case 2:
return $$__2.call(this,query,elem);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
$$.cljs$core$IFn$_invoke$arity$1 = $$__1;
$$.cljs$core$IFn$_invoke$arity$2 = $$__2;
return $$;
})()
;
lt.util.dom.$ = (function() {
var $ = null;
var $__1 = (function (query){return $.call(null,query,document);
});
var $__2 = (function (query,elem){return elem.querySelector(cljs.core.name.call(null,query));
});
$ = function(query,elem){
switch(arguments.length){
case 1:
return $__1.call(this,query);
case 2:
return $__2.call(this,query,elem);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
$.cljs$core$IFn$_invoke$arity$1 = $__1;
$.cljs$core$IFn$_invoke$arity$2 = $__2;
return $;
})()
;
lt.util.dom.append = (function append(parent,child){parent.appendChild(child);
return parent;
});
lt.util.dom.prepend = (function prepend(parent,child){if(cljs.core.truth_(parent.firstChild))
{return parent.insertBefore(child,parent.firstChild);
} else
{return lt.util.dom.append.call(null,parent,child);
}
});
lt.util.dom.add_class = (function add_class(elem,class$){if(cljs.core.truth_((function (){var and__3396__auto__ = elem;if(cljs.core.truth_(and__3396__auto__))
{return !(cljs.core.empty_QMARK_.call(null,cljs.core.name.call(null,class$)));
} else
{return and__3396__auto__;
}
})()))
{return elem.classList.add(cljs.core.name.call(null,class$));
} else
{return null;
}
});
lt.util.dom.remove_class = (function remove_class(elem,class$){if(cljs.core.truth_((function (){var and__3396__auto__ = elem;if(cljs.core.truth_(and__3396__auto__))
{return !(cljs.core.empty_QMARK_.call(null,cljs.core.name.call(null,class$)));
} else
{return and__3396__auto__;
}
})()))
{return elem.classList.remove(cljs.core.name.call(null,class$));
} else
{return null;
}
});
lt.util.dom.has_class_QMARK_ = (function has_class_QMARK_(elem,class$){if(cljs.core.truth_((function (){var and__3396__auto__ = elem;if(cljs.core.truth_(and__3396__auto__))
{return !(cljs.core.empty_QMARK_.call(null,cljs.core.name.call(null,class$)));
} else
{return and__3396__auto__;
}
})()))
{return elem.classList.contains(cljs.core.name.call(null,class$));
} else
{return null;
}
});
lt.util.dom.toggle_class = (function toggle_class(elem,class$){if(cljs.core.truth_(lt.util.dom.has_class_QMARK_.call(null,elem,class$)))
{return lt.util.dom.remove_class.call(null,elem,class$);
} else
{return lt.util.dom.add_class.call(null,elem,class$);
}
});
lt.util.dom.set_css = (function set_css(elem,things){var seq__14761 = cljs.core.seq.call(null,things);var chunk__14762 = null;var count__14763 = 0;var i__14764 = 0;while(true){
if((i__14764 < count__14763))
{var vec__14765 = cljs.core._nth.call(null,chunk__14762,i__14764);var k = cljs.core.nth.call(null,vec__14765,0,null);var v = cljs.core.nth.call(null,vec__14765,1,null);(elem.style[cljs.core.name.call(null,k)] = (((v instanceof cljs.core.Keyword))?cljs.core.name.call(null,v):v));
{
var G__14767 = seq__14761;
var G__14768 = chunk__14762;
var G__14769 = count__14763;
var G__14770 = (i__14764 + 1);
seq__14761 = G__14767;
chunk__14762 = G__14768;
count__14763 = G__14769;
i__14764 = G__14770;
continue;
}
} else
{var temp__4092__auto__ = cljs.core.seq.call(null,seq__14761);if(temp__4092__auto__)
{var seq__14761__$1 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,seq__14761__$1))
{var c__4150__auto__ = cljs.core.chunk_first.call(null,seq__14761__$1);{
var G__14771 = cljs.core.chunk_rest.call(null,seq__14761__$1);
var G__14772 = c__4150__auto__;
var G__14773 = cljs.core.count.call(null,c__4150__auto__);
var G__14774 = 0;
seq__14761 = G__14771;
chunk__14762 = G__14772;
count__14763 = G__14773;
i__14764 = G__14774;
continue;
}
} else
{var vec__14766 = cljs.core.first.call(null,seq__14761__$1);var k = cljs.core.nth.call(null,vec__14766,0,null);var v = cljs.core.nth.call(null,vec__14766,1,null);(elem.style[cljs.core.name.call(null,k)] = (((v instanceof cljs.core.Keyword))?cljs.core.name.call(null,v):v));
{
var G__14775 = cljs.core.next.call(null,seq__14761__$1);
var G__14776 = null;
var G__14777 = 0;
var G__14778 = 0;
seq__14761 = G__14775;
chunk__14762 = G__14776;
count__14763 = G__14777;
i__14764 = G__14778;
continue;
}
}
} else
{return null;
}
}
break;
}
});
lt.util.dom.css = (function css(elem,things){var things__$1 = ((cljs.core._EQ_.call(null,Object,cljs.core.type.call(null,things)))?cljs.core.js__GT_clj.call(null,things):things);if(cljs.core.map_QMARK_.call(null,things__$1))
{return lt.util.dom.set_css.call(null,elem,things__$1);
} else
{return (elem.style[cljs.core.name.call(null,things__$1)]);
}
});
lt.util.dom.set_attr = (function set_attr(elem,things){var seq__14785 = cljs.core.seq.call(null,things);var chunk__14786 = null;var count__14787 = 0;var i__14788 = 0;while(true){
if((i__14788 < count__14787))
{var vec__14789 = cljs.core._nth.call(null,chunk__14786,i__14788);var k = cljs.core.nth.call(null,vec__14789,0,null);var v = cljs.core.nth.call(null,vec__14789,1,null);elem.setAttribute(cljs.core.name.call(null,k),(((v instanceof cljs.core.Keyword))?cljs.core.name.call(null,v):v));
{
var G__14791 = seq__14785;
var G__14792 = chunk__14786;
var G__14793 = count__14787;
var G__14794 = (i__14788 + 1);
seq__14785 = G__14791;
chunk__14786 = G__14792;
count__14787 = G__14793;
i__14788 = G__14794;
continue;
}
} else
{var temp__4092__auto__ = cljs.core.seq.call(null,seq__14785);if(temp__4092__auto__)
{var seq__14785__$1 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,seq__14785__$1))
{var c__4150__auto__ = cljs.core.chunk_first.call(null,seq__14785__$1);{
var G__14795 = cljs.core.chunk_rest.call(null,seq__14785__$1);
var G__14796 = c__4150__auto__;
var G__14797 = cljs.core.count.call(null,c__4150__auto__);
var G__14798 = 0;
seq__14785 = G__14795;
chunk__14786 = G__14796;
count__14787 = G__14797;
i__14788 = G__14798;
continue;
}
} else
{var vec__14790 = cljs.core.first.call(null,seq__14785__$1);var k = cljs.core.nth.call(null,vec__14790,0,null);var v = cljs.core.nth.call(null,vec__14790,1,null);elem.setAttribute(cljs.core.name.call(null,k),(((v instanceof cljs.core.Keyword))?cljs.core.name.call(null,v):v));
{
var G__14799 = cljs.core.next.call(null,seq__14785__$1);
var G__14800 = null;
var G__14801 = 0;
var G__14802 = 0;
seq__14785 = G__14799;
chunk__14786 = G__14800;
count__14787 = G__14801;
i__14788 = G__14802;
continue;
}
}
} else
{return null;
}
}
break;
}
});
lt.util.dom.attr = (function attr(elem,things){if(cljs.core.map_QMARK_.call(null,things))
{return lt.util.dom.set_attr.call(null,elem,things);
} else
{return elem.getAttribute(cljs.core.name.call(null,things));
}
});
lt.util.dom.parent = (function parent(elem){return elem.parentNode;
});
lt.util.dom.children = (function children(elem){return elem.children;
});
lt.util.dom.remove = (function remove(elem){var temp__4092__auto__ = lt.util.dom.parent.call(null,elem);if(cljs.core.truth_(temp__4092__auto__))
{var p = temp__4092__auto__;return p.removeChild(elem);
} else
{return null;
}
});
lt.util.dom.empty = (function empty(elem){return elem.innerHTML = "";
});
/**
* @param {...*} var_args
*/
lt.util.dom.val = (function() { 
var val__delegate = function (elem,p__14803){var vec__14805 = p__14803;var v = cljs.core.nth.call(null,vec__14805,0,null);if(cljs.core.not.call(null,v))
{return elem.value;
} else
{return elem.value = v;
}
};
var val = function (elem,var_args){
var p__14803 = null;if (arguments.length > 1) {
  p__14803 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return val__delegate.call(this,elem,p__14803);};
val.cljs$lang$maxFixedArity = 1;
val.cljs$lang$applyTo = (function (arglist__14806){
var elem = cljs.core.first(arglist__14806);
var p__14803 = cljs.core.rest(arglist__14806);
return val__delegate(elem,p__14803);
});
val.cljs$core$IFn$_invoke$arity$variadic = val__delegate;
return val;
})()
;
lt.util.dom.prevent = (function prevent(e){return e.preventDefault();
});
lt.util.dom.stop_propagation = (function stop_propagation(e){return e.stopPropagation();
});
lt.util.dom.siblings = (function siblings(elem){return lt.util.dom.parent.call(null,elem).children;
});
lt.util.dom.parents = (function parents(elem,sel){var root = lt.util.dom.parent.call(null,lt.util.dom.$.call(null,new cljs.core.Keyword(null,"body","body",1016933652)));var p = lt.util.dom.parent.call(null,elem);while(true){
if(cljs.core.truth_((function (){var and__3396__auto__ = p;if(cljs.core.truth_(and__3396__auto__))
{return cljs.core.not_EQ_.call(null,p,root);
} else
{return and__3396__auto__;
}
})()))
{if(cljs.core.truth_(p.webkitMatchesSelector(cljs.core.name.call(null,sel))))
{return p;
} else
{{
var G__14807 = lt.util.dom.parent.call(null,p);
p = G__14807;
continue;
}
}
} else
{return null;
}
break;
}
});
lt.util.dom.next = (function next(elem){return elem.nextElementSibling;
});
lt.util.dom.before = (function before(elem,neue){return lt.util.dom.parent.call(null,elem).insertBefore(neue,elem);
});
lt.util.dom.after = (function after(elem,neue){var temp__4090__auto__ = lt.util.dom.next.call(null,elem);if(cljs.core.truth_(temp__4090__auto__))
{var n = temp__4090__auto__;return lt.util.dom.before.call(null,n,neue);
} else
{return lt.util.dom.append.call(null,lt.util.dom.parent.call(null,elem),neue);
}
});
lt.util.dom.replace_with = (function replace_with(orig,neue){var temp__4092__auto__ = lt.util.dom.parent.call(null,orig);if(cljs.core.truth_(temp__4092__auto__))
{var p = temp__4092__auto__;return p.replaceChild(neue,orig);
} else
{return null;
}
});
lt.util.dom.height = (function height(elem){return elem.clientHeight;
});
lt.util.dom.width = (function width(elem){return elem.clientWidth;
});
lt.util.dom.offset_top = (function offset_top(elem){return elem.offsetTop;
});
/**
* @param {...*} var_args
*/
lt.util.dom.scroll_top = (function() { 
var scroll_top__delegate = function (elem,p__14808){var vec__14810 = p__14808;var v = cljs.core.nth.call(null,vec__14810,0,null);if(cljs.core.not.call(null,v))
{return elem.scrollTop;
} else
{return elem.scrollTop = v;
}
};
var scroll_top = function (elem,var_args){
var p__14808 = null;if (arguments.length > 1) {
  p__14808 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return scroll_top__delegate.call(this,elem,p__14808);};
scroll_top.cljs$lang$maxFixedArity = 1;
scroll_top.cljs$lang$applyTo = (function (arglist__14811){
var elem = cljs.core.first(arglist__14811);
var p__14808 = cljs.core.rest(arglist__14811);
return scroll_top__delegate(elem,p__14808);
});
scroll_top.cljs$core$IFn$_invoke$arity$variadic = scroll_top__delegate;
return scroll_top;
})()
;
lt.util.dom.top = (function top(elem){return lt.util.dom.css.call(null,elem,new cljs.core.Keyword(null,"top","top",1014019271));
});
lt.util.dom.bottom = (function bottom(elem){return lt.util.dom.css.call(null,elem,new cljs.core.Keyword(null,"bottom","bottom",3925642653));
});
lt.util.dom.left = (function left(elem){return lt.util.dom.css.call(null,elem,new cljs.core.Keyword(null,"left","left",1017222009));
});
lt.util.dom.right = (function right(elem){return lt.util.dom.css.call(null,elem,new cljs.core.Keyword(null,"right","right",1122416014));
});
/**
* @param {...*} var_args
*/
lt.util.dom.html = (function() { 
var html__delegate = function (elem,p__14812){var vec__14814 = p__14812;var h = cljs.core.nth.call(null,vec__14814,0,null);if(cljs.core.not.call(null,h))
{return elem.innerHTML;
} else
{return elem.innerHTML = h;
}
};
var html = function (elem,var_args){
var p__14812 = null;if (arguments.length > 1) {
  p__14812 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return html__delegate.call(this,elem,p__14812);};
html.cljs$lang$maxFixedArity = 1;
html.cljs$lang$applyTo = (function (arglist__14815){
var elem = cljs.core.first(arglist__14815);
var p__14812 = cljs.core.rest(arglist__14815);
return html__delegate(elem,p__14812);
});
html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
return html;
})()
;
lt.util.dom.__GT_ev = (function __GT_ev(ev){return [cljs.core.str(cljs.core.name.call(null,ev))].join('');
});
/**
* @param {...*} var_args
*/
lt.util.dom.trigger = (function() { 
var trigger__delegate = function (elem,ev,p__14816){var vec__14818 = p__14816;var opts = cljs.core.nth.call(null,vec__14818,0,null);var e = document.createEvent("HTMLEvents");e.initEvent(cljs.core.name.call(null,ev),true,true);
e.opts = opts;
return elem.dispatchEvent(e);
};
var trigger = function (elem,ev,var_args){
var p__14816 = null;if (arguments.length > 2) {
  p__14816 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2),0);} 
return trigger__delegate.call(this,elem,ev,p__14816);};
trigger.cljs$lang$maxFixedArity = 2;
trigger.cljs$lang$applyTo = (function (arglist__14819){
var elem = cljs.core.first(arglist__14819);
arglist__14819 = cljs.core.next(arglist__14819);
var ev = cljs.core.first(arglist__14819);
var p__14816 = cljs.core.rest(arglist__14819);
return trigger__delegate(elem,ev,p__14816);
});
trigger.cljs$core$IFn$_invoke$arity$variadic = trigger__delegate;
return trigger;
})()
;
lt.util.dom.on = (function on(elem,ev,cb){return elem.addEventListener(lt.util.dom.__GT_ev.call(null,ev),cb);
});
lt.util.dom.off = (function off(elem,ev,cb){return elem.removeEventListener(lt.util.dom.__GT_ev.call(null,ev),cb);
});
lt.util.dom.on_STAR_ = (function on_STAR_(elem,evs){var seq__14826 = cljs.core.seq.call(null,evs);var chunk__14827 = null;var count__14828 = 0;var i__14829 = 0;while(true){
if((i__14829 < count__14828))
{var vec__14830 = cljs.core._nth.call(null,chunk__14827,i__14829);var ev = cljs.core.nth.call(null,vec__14830,0,null);var cb = cljs.core.nth.call(null,vec__14830,1,null);elem.addEventListener(lt.util.dom.__GT_ev.call(null,ev),cb);
{
var G__14832 = seq__14826;
var G__14833 = chunk__14827;
var G__14834 = count__14828;
var G__14835 = (i__14829 + 1);
seq__14826 = G__14832;
chunk__14827 = G__14833;
count__14828 = G__14834;
i__14829 = G__14835;
continue;
}
} else
{var temp__4092__auto__ = cljs.core.seq.call(null,seq__14826);if(temp__4092__auto__)
{var seq__14826__$1 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,seq__14826__$1))
{var c__4150__auto__ = cljs.core.chunk_first.call(null,seq__14826__$1);{
var G__14836 = cljs.core.chunk_rest.call(null,seq__14826__$1);
var G__14837 = c__4150__auto__;
var G__14838 = cljs.core.count.call(null,c__4150__auto__);
var G__14839 = 0;
seq__14826 = G__14836;
chunk__14827 = G__14837;
count__14828 = G__14838;
i__14829 = G__14839;
continue;
}
} else
{var vec__14831 = cljs.core.first.call(null,seq__14826__$1);var ev = cljs.core.nth.call(null,vec__14831,0,null);var cb = cljs.core.nth.call(null,vec__14831,1,null);elem.addEventListener(lt.util.dom.__GT_ev.call(null,ev),cb);
{
var G__14840 = cljs.core.next.call(null,seq__14826__$1);
var G__14841 = null;
var G__14842 = 0;
var G__14843 = 0;
seq__14826 = G__14840;
chunk__14827 = G__14841;
count__14828 = G__14842;
i__14829 = G__14843;
continue;
}
}
} else
{return null;
}
}
break;
}
});
lt.util.dom.active_element = (function active_element(){return document.activeElement;
});
lt.util.dom.focus = (function focus(elem){return elem.focus();
});
lt.util.dom.blur = (function blur(elem){return elem.blur();
});
lt.util.dom.selection = (function selection(elem,start,stop,dir){return elem.setSelectionRange(start,stop,dir);
});
lt.util.dom.make = (function make(str){var d = document.createElement("div");lt.util.dom.html.call(null,d,str);
return lt.util.dom.children.call(null,d);
});
lt.util.dom.index = (function index(e){var p = lt.util.dom.parent.call(null,e);var c = (cljs.core.truth_(p)?lt.util.dom.children.call(null,p):[]);var len = c.length;if(cljs.core.not.call(null,p))
{return -1;
} else
{var i = 0;while(true){
if((i >= len))
{return null;
} else
{if(cljs.core._EQ_.call(null,(c[i]),e))
{return i;
} else
{{
var G__14844 = (i + 1);
i = G__14844;
continue;
}
}
}
break;
}
}
});
lt.util.dom.ready = (function ready(func){return lt.util.dom.on.call(null,document,new cljs.core.Keyword(null,"DOMContentLoaded","DOMContentLoaded",3783578446),func);
});
lt.util.dom.fragment = (function fragment(items){var frag = document.createDocumentFragment();var seq__14849_14853 = cljs.core.seq.call(null,items);var chunk__14850_14854 = null;var count__14851_14855 = 0;var i__14852_14856 = 0;while(true){
if((i__14852_14856 < count__14851_14855))
{var i_14857 = cljs.core._nth.call(null,chunk__14850_14854,i__14852_14856);frag.appendChild(i_14857);
{
var G__14858 = seq__14849_14853;
var G__14859 = chunk__14850_14854;
var G__14860 = count__14851_14855;
var G__14861 = (i__14852_14856 + 1);
seq__14849_14853 = G__14858;
chunk__14850_14854 = G__14859;
count__14851_14855 = G__14860;
i__14852_14856 = G__14861;
continue;
}
} else
{var temp__4092__auto___14862 = cljs.core.seq.call(null,seq__14849_14853);if(temp__4092__auto___14862)
{var seq__14849_14863__$1 = temp__4092__auto___14862;if(cljs.core.chunked_seq_QMARK_.call(null,seq__14849_14863__$1))
{var c__4150__auto___14864 = cljs.core.chunk_first.call(null,seq__14849_14863__$1);{
var G__14865 = cljs.core.chunk_rest.call(null,seq__14849_14863__$1);
var G__14866 = c__4150__auto___14864;
var G__14867 = cljs.core.count.call(null,c__4150__auto___14864);
var G__14868 = 0;
seq__14849_14853 = G__14865;
chunk__14850_14854 = G__14866;
count__14851_14855 = G__14867;
i__14852_14856 = G__14868;
continue;
}
} else
{var i_14869 = cljs.core.first.call(null,seq__14849_14863__$1);frag.appendChild(i_14869);
{
var G__14870 = cljs.core.next.call(null,seq__14849_14863__$1);
var G__14871 = null;
var G__14872 = 0;
var G__14873 = 0;
seq__14849_14853 = G__14870;
chunk__14850_14854 = G__14871;
count__14851_14855 = G__14872;
i__14852_14856 = G__14873;
continue;
}
}
} else
{}
}
break;
}
return frag;
});
